package com.springstartboot.bankapplication.service;

import java.util.List;
import java.util.Set;  // Import Set

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.springstartboot.bankapplication.model.Account;
import com.springstartboot.bankapplication.model.Bank;
import com.springstartboot.bankapplication.repository.AccountRepo;
import com.springstartboot.bankapplication.repository.BankRepo;

@Service
public class BankService {
	@Autowired
	BankRepo bankRepo;
	
	@Autowired
	AccountRepo accountRepo;
	// C R U D
	
	// C
	public void addBank(Bank bank) {
		if (bank.getAccounts() != null) {
            for (Account account : bank.getAccounts()) {
                account.setBank(bank);
            }
        }
		bankRepo.save(bank);
	}
	
	// R
	public List<Bank> getAllBank() {
		return bankRepo.findAll();
	}
	
	// R
	public Bank getBankById(int id) {
		return bankRepo.findById(id).get();
	}
	
	// U
	public void updateBank(int id, Bank bank) {
	    Bank myBank = getBankById(id);
	    
	    // Set the bank name
	    myBank.setBankName(bank.getBankName());
	    
	    // Handle the accounts - save new ones or update existing ones
	    List<Account> updatedAccounts = bank.getAccounts();
	    
	    // Loop through each account, set its bank reference, and save
	    for (Account account : updatedAccounts) {
	        account.setBank(myBank); // Ensure each account is linked to the current bank
	        // If the account is new (not persisted), save it
	        if (account.getAccountId() == 0) {
	            accountRepo.save(account);
	        } else {
	            // If the account is an existing one, just update it
	            accountRepo.save(account);
	        }
	    }
	    
	    // Now save the bank (this will save the accounts due to cascade)
	    bankRepo.save(myBank);
	}

	
	// D
	public void deleteBank(int id) {
		bankRepo.deleteById(id);
	}
}
